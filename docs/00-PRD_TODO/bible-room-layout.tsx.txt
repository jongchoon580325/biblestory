import React, { useState, useRef, useCallback } from 'react';
import { 
  Book, 
  Database, 
  ArrowUp,
  Maximize2,
  Heart,
  Mail,
  Moon,
  Star,
  Bookmark,
  Globe
} from 'lucide-react';

const BibleRoomLayout = () => {
  const [activeTab, setActiveTab] = useState('구약');
  const [selectedBook, setSelectedBook] = useState(null);
  const [currentPage, setCurrentPage] = useState('HOME');

  // useFirework 훅 구현
  const useFirework = () => {
    const fireworkRef = useRef(null);
    
    const fire = useCallback(() => {
      if (!fireworkRef.current) return;
      
      const element = fireworkRef.current;
      const rect = element.getBoundingClientRect();
      const colors = ['red', 'yellow', 'blue', 'green'];
      
      // 기존 파티클 제거
      const existingParticles = element.querySelectorAll('.firework-particle');
      existingParticles.forEach(p => p.remove());
      
      // 새 파티클 생성
      for (let i = 0; i < 12; i++) {
        const particle = document.createElement('div');
        particle.className = `firework-particle ${colors[Math.floor(Math.random() * colors.length)]}`;
        
        // 랜덤 위치와 크기
        const size = Math.random() * 6 + 4;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        particle.style.left = `${Math.random() * 80 + 10}%`;
        particle.style.top = `${Math.random() * 80 + 10}%`;
        
        // 랜덤 애니메이션 지연
        particle.style.animationDelay = `${Math.random() * 0.3}s`;
        particle.style.animationDuration = `${0.7 + Math.random() * 0.3}s`;
        
        element.appendChild(particle);
        
        // 애니메이션 완료 후 파티클 제거
        setTimeout(() => {
          if (particle.parentNode) {
            particle.parentNode.removeChild(particle);
          }
        }, 1000);
      }
    }, []);
    
    return { fireworkRef, fire };
  };

  // CSS 스타일 추가
  React.useEffect(() => {
    const style = document.createElement('style');
    style.textContent = `
      /* 불꽃놀이 관련 스타일 */
      .firework-canvas {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 10;
      }

      .firework-particle {
        position: absolute;
        border-radius: 50%;
        opacity: 0.8;
        pointer-events: none;
        will-change: transform, opacity;
        transition: opacity 0.3s;
      }

      .firework-particle.red { background: #ff3b3b; }
      .firework-particle.yellow { background: #ffe066; }
      .firework-particle.blue { background: #5bc0eb; }
      .firework-particle.green { background: #53e69d; }

      @keyframes firework-explode {
        0% { 
          transform: scale(0.5) translateY(0) translateX(0); 
          opacity: 1; 
        }
        50% { 
          opacity: 1; 
        }
        100% { 
          transform: scale(1.2) translateY(-40px) translateX(${Math.random() * 60 - 30}px); 
          opacity: 0; 
        }
      }

      .firework-particle {
        animation: firework-explode 0.7s cubic-bezier(0.4,0,0.2,1) forwards;
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      if (document.head.contains(style)) {
        document.head.removeChild(style);
      }
    };
  }, []);

  // 성경 책 데이터
  const oldTestament = [
    '창세기', '출애굽기', '레위기', '민수기', '신명기',
    '여호수아', '사사기', '룻기', '사무엘상', '사무엘하',
    '열왕기상', '열왕기하', '역대상', '역대하', '에스라',
    '느헤미야', '에스더', '욥기', '시편', '잠언',
    '전도서', '아가', '이사야', '예레미야', '예레미야애가',
    '에스겔', '다니엘', '호세아', '요엘', '아모스',
    '오바댜', '요나', '미가', '나훔', '하박국',
    '스바냐', '학개', '스가랴', '말라기'
  ];

  const newTestament = [
    '마태복음', '마가복음', '누가복음', '요한복음', '사도행전',
    '로마서', '고린도전서', '고린도후서', '갈라디아서', '에베소서',
    '빌립보서', '골로새서', '데살로니가전서', '데살로니가후서', '디모데전서',
    '디모데후서', '디도서', '빌레몬서', '히브리서', '야고보서',
    '베드로전서', '베드로후서', '요한일서', '요한이서', '요한삼서',
    '유다서', '요한계시록'
  ];

  const books = activeTab === '구약' ? oldTestament : newTestament;

  // 네비게이션 컴포넌트
  const Navigation = () => (
    <nav className="bg-slate-900/80 backdrop-blur-xl border-b border-slate-700/50 sticky top-0 z-50">
      <div className="max-w-6xl mx-auto px-6">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center space-x-3">
            <div className="bg-gradient-to-br from-blue-500 to-purple-600 p-2 rounded-xl">
              <Book className="w-6 h-6 text-white" />
            </div>
            <h1 className="text-xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
              Bible Room Study
            </h1>
          </div>
          
          <div className="flex items-center space-x-1">
            {['HOME', 'DATA'].map((page) => (
              <button
                key={page}
                onClick={() => setCurrentPage(page)}
                className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 ${
                  currentPage === page
                    ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30'
                    : 'text-slate-400 hover:text-white hover:bg-slate-800/50'
                }`}
              >
                {page === 'DATA' && <Database className="w-4 h-4 inline mr-2" />}
                {page}
              </button>
            ))}
          </div>
        </div>
      </div>
    </nav>
  );

  // 탭별 통계 카드 컴포넌트 (2개 카드, 한 줄 레이아웃)
  const TabStats = ({ tab }) => {
    const stats = tab === '구약' 
      ? { books: 39, materials: 156 }
      : { books: 27, materials: 91 };
    
    return (
      <div className="grid grid-cols-2 gap-6 mb-8">
        <div className="bg-gradient-to-br from-blue-500/10 to-blue-600/10 backdrop-blur-sm rounded-2xl p-6 border border-blue-500/20">
          <div className="flex items-center space-x-4">
            <Book className="w-10 h-10 text-blue-400" />
            <div>
              <p className="text-2xl font-bold text-white">{stats.books}권</p>
              <p className="text-blue-400 text-sm">총 {tab} 책</p>
            </div>
          </div>
        </div>
        <div className="bg-gradient-to-br from-purple-500/10 to-purple-600/10 backdrop-blur-sm rounded-2xl p-6 border border-purple-500/20">
          <div className="flex items-center space-x-4">
            <Database className="w-10 h-10 text-purple-400" />
            <div>
              <p className="text-2xl font-bold text-white">{stats.materials}개 자료</p>
              <p className="text-purple-400 text-sm">저장된 자료</p>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // 탭 컴포넌트
  const TabNavigation = () => (
    <div className="bg-slate-800/30 backdrop-blur-sm rounded-2xl p-2 border border-slate-700/50">
      <div className="flex space-x-2">
        {['구약', '신약'].map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`flex-1 py-3 px-6 rounded-xl font-semibold transition-all duration-300 ${
              activeTab === tab
                ? 'bg-gradient-to-r from-blue-500 to-purple-500 text-white shadow-lg shadow-blue-500/25'
                : 'text-slate-400 hover:text-white hover:bg-slate-700/50'
            }`}
          >
            {tab} ({tab === '구약' ? oldTestament.length : newTestament.length}권)
          </button>
        ))}
      </div>
    </div>
  );

  // 책 카드 컴포넌트 (새로운 폭죽 효과 적용)
  const BookCard = ({ book, index }) => {
    const { fireworkRef, fire } = useFirework();

    return (
      <div
        ref={fireworkRef}
        className={`group relative bg-gradient-to-br from-slate-800/50 to-slate-900/50 backdrop-blur-sm rounded-xl p-4 border border-slate-700/50 hover:border-blue-500/50 transition-all duration-300 cursor-pointer transform hover:-translate-y-1 hover:shadow-xl hover:shadow-blue-500/10 overflow-hidden ${
          selectedBook === book ? 'ring-2 ring-blue-500/50 border-blue-500/50' : ''
        }`}
        onClick={() => setSelectedBook(selectedBook === book ? null : book)}
        onMouseEnter={fire}
        onMouseLeave={() => {}}
      >
        {/* 호버 시 그라데이션 오버레이 */}
        <div className="absolute inset-0 bg-gradient-to-br from-blue-500/0 to-purple-500/0 group-hover:from-blue-500/10 group-hover:to-purple-500/10 transition-all duration-300 rounded-xl" />
        
        <div className="relative z-10 text-center">
          <div className="bg-gradient-to-br from-blue-500/20 to-purple-500/20 p-3 rounded-lg mx-auto w-fit mb-3 group-hover:scale-110 transition-transform duration-300">
            <Bookmark className="w-6 h-6 text-blue-400 group-hover:text-white transition-colors" />
          </div>
          
          <h3 className="font-bold text-white group-hover:text-blue-400 transition-colors text-lg mb-2">
            {book}
          </h3>
          
          <p className="text-sm text-slate-400 bg-slate-700/30 px-3 py-1 rounded-full inline-block">
            {Math.floor(Math.random() * 20) + 1}개 자료
          </p>
        </div>

        {/* 선택 표시 */}
        {selectedBook === book && (
          <div className="absolute -top-2 -right-2 bg-blue-500 text-white p-1 rounded-full z-20">
            <Star className="w-4 h-4 fill-current" />
          </div>
        )}
      </div>
    );
  };

  // 책 그리드 (5열 고정)
  const BookGrid = () => (
    <div className="grid grid-cols-5 gap-4">
      {books.map((book, index) => (
        <BookCard key={`${activeTab}-${book}`} book={book} index={index} />
      ))}
    </div>
  );

  // 플로팅 액션 버튼
  const FloatingActions = () => (
    <div className="fixed bottom-8 right-8 flex flex-col space-y-3 z-40">
      <button className="bg-blue-500 hover:bg-blue-600 text-white p-3 rounded-full shadow-lg shadow-blue-500/25 transition-all duration-200 hover:scale-110">
        <ArrowUp className="w-6 h-6" />
      </button>
      <button className="bg-purple-500 hover:bg-purple-600 text-white p-3 rounded-full shadow-lg shadow-purple-500/25 transition-all duration-200 hover:scale-110">
        <Maximize2 className="w-6 h-6" />
      </button>
    </div>
  );

  // 푸터
  const Footer = () => (
    <footer className="mt-16 border-t border-slate-700/50 py-8">
      <div className="max-w-6xl mx-auto px-6 text-center">
        <div className="flex items-center justify-center space-x-2 text-slate-400">
          <Globe className="w-4 h-4" />
          <span>Your Personal Bible Room Study, Built with</span>
          <Heart className="w-4 h-4 text-red-400 fill-current" />
          <span>by 나종춘</span>
          <span>|</span>
          <a 
            href="mailto:najongchoon@gmail.com" 
            className="flex items-center space-x-1 text-blue-400 hover:text-blue-300 transition-colors"
          >
            <Mail className="w-4 h-4" />
            <span>najongchoon@gmail.com</span>
          </a>
        </div>
      </div>
    </footer>
  );

  return (
    <div className="min-h-screen bg-slate-900" style={{ backgroundColor: '#292828' }}>
      {/* 배경 그라데이션 */}
      <div className="fixed inset-0 bg-gradient-to-br from-blue-900/10 via-purple-900/10 to-slate-900/10 pointer-events-none" />
      
      <Navigation />
      
      <main className="max-w-6xl mx-auto px-6 py-8 relative">
        {currentPage === 'HOME' && (
          <div className="space-y-8">
            {/* 헤더 섹션 */}
            <div className="text-center space-y-4">
              <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-blue-400 bg-clip-text text-transparent">
                성경공부 자료실
              </h1>
              <p className="text-slate-400 text-lg max-w-2xl mx-auto">
                체계적으로 정리된 성경공부 자료로 깊이 있는 말씀 묵상을 시작하세요
              </p>
            </div>

            <TabNavigation />
            
            {/* 탭별 통계 카드 */}
            <TabStats tab={activeTab} />

            <BookGrid />
          </div>
        )}

        {currentPage === 'DATA' && (
          <div className="space-y-8">
            <div className="text-center space-y-4">
              <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-400 via-blue-400 to-purple-400 bg-clip-text text-transparent">
                자료 관리
              </h1>
              <p className="text-slate-400 text-lg">
                성경공부 자료를 체계적으로 관리하고 백업하세요
              </p>
            </div>
            
            <div className="bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 border border-slate-700/50 text-center">
              <Database className="w-16 h-16 text-slate-400 mx-auto mb-4" />
              <h3 className="text-xl font-semibold text-white mb-2">관리자 페이지</h3>
              <p className="text-slate-400 mb-6">자료 등록, 수정, 삭제 기능이 구현될 예정입니다</p>
              <button className="bg-gradient-to-r from-purple-500 to-blue-500 text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-200">
                개발 예정
              </button>
            </div>
          </div>
        )}
      </main>

      <Footer />
      <FloatingActions />
    </div>
  );
};

export default BibleRoomLayout;